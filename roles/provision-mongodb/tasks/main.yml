---
 - name: Provision MongoDB
   local_action:
     module: ec2
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     user_data: |
      #!/bin/bash 
      echo "{{ ec2_tag_Name }}" > /etc/hostname
      echo "{{ LCALL }}" >> /etc/default/locale
      touch /var/lib/cloud/instance/locale-check.skip
      shutdown -r now
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Env":"{{ec2_tag_Env}}","Provision":"{{ec2_tag_Provision}}"}'
     assign_public_ip: yes
     wait: true
     count: 1
     volumes: 
     - device_name: /dev/sda1
       device_type: gp2
       volume_size: "{{ root_volume_size }}"
       delete_on_termination: true
     - device_name: /dev/xvda
       device_type: io1
       volume_size: "{{ data_volume_size }}"
       iops: 500
       delete_on_termination: true
   register: ec2

 - debug: var=item
   with_items: ec2.instances

# - ec2_vol:
      #instance="{{ item.id }}"
#      name="{{ ec2_tag_Name }}"
#      volume_size="{{ data_volume_size }}"
#      volume_type= io1
#      iops= 100
#      device_name: /dev/xvdb
#      delete_on_termination: yes
#   register: ec2_vol
    

 - ec2_eip:
      device_id="{{ item }}"
      region="{{ ec2_region }}"
      public_ip="{{ elastic_ipaddress }}"
   with_items: ec2.instance_ids

 - add_host: name={{ item.public_ip }} >
             groups=tag_Type_{{ec2_tag_Type}},tag_Environment_{{ec2_tag_Environment}}
             ec2_region={{ec2_region}} 
             ec2_tag_Name={{ec2_tag_Name}}
             ec2_tag_Type={{ec2_tag_Type}}
             ec2_tag_Environment={{ec2_tag_Environment}}
             ec2_ip_address={{item.public_ip}}
             groupname=launched
   with_items: ec2.instances


 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host={{elastic_ipaddress}} port=22 delay=300 timeout=320 state=started
   with_items: ec2.instances
